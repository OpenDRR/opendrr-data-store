-- create multi hazard indicators
DROP VIEW IF EXISTS results.mh_threat_landslide_hazard_sauid CASCADE;
CREATE VIEW results.mh_threat_landslide_hazard_sauid AS 

-- 7.1 Landslide Hazard
-- 7.1.1 Landslide Hazard Intensity
-- 7.1.1.1 Debris Flow Susceptibility
SELECT 
a.sauid,
COALESCE(CAST((b.mh_sum - (SELECT mhsum_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT mhsum_max FROM lut.mh_intensity_canada_minmax) - (SELECT mhsum_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "MH_Intensity",
CAST(c.lndsus AS NUMERIC) AS "LndSus",
COALESCE(CAST((c.lndsus - (SELECT lndsus_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT lndsus_max FROM lut.mh_intensity_canada_minmax) - (SELECT lndsus_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "LndSusn",
(SELECT "LndSust" FROM lut.mh_thresholds) AS "LndSust", -- Landslide Susceptibility Threshold

-- 7.1.2.1 Building Function
COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.number) ELSE 0 END AS NUMERIC),0) AS "BldgNumT_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-LD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_LD_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-MD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_MD_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-HD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_HD_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Commercial' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Comm_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Industrial' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Ind_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Civic' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Civic_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Agricultural' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Agr_Lst",

-- 7.1.2.2 Building Construction
COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Wood' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Wood_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Concrete' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Concrete_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Precast' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "PreCast_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='RMasonry' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RMasonry_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='URMasonry' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "URMasonry_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Steel' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Steel_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Manufactured' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Manufactured_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='PC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "PreCode_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='LC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "LowCode_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='MC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "ModCode_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='HC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "HiCode_Lst",

-- 7.1.2.3 People
COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN e.censuspop ELSE 0 END AS NUMERIC),0) AS "CensusPop_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.day) ELSE 0 END AS NUMERIC),0) AS "DayPopT_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.night) ELSE 0 END AS NUMERIC),0) AS "NightPopT_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.transit) ELSE 0 END AS NUMERIC),0) AS "TransitPopT_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-LD' THEN a.number ELSE 0 END) / e.people_du ELSE 0 END AS NUMERIC),0) AS "SF_Hshlds_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN (SUM(CASE WHEN a.genocc ='Residential-MD' THEN a.number ELSE 0 END) + SUM(CASE WHEN a.genocc ='Residential-HD' THEN a.number ELSE 0 END)) / 
e.people_du ELSE 0 END AS NUMERIC),0) AS "MF_Hshlds_Lst",

-- 7.1.2.4 Assets
COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.structural + a.nonstructural + a.contents) ELSE 0 END AS NUMERIC),0) AS "AssetCostT_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.structural + a.nonstructural) ELSE 0 END AS NUMERIC),0) AS "BldgCostT_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.structural) ELSE 0 END AS NUMERIC),0) AS "StrCostT_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.nonstructural) ELSE 0 END AS NUMERIC),0) AS "NStrCostT_Lst",

COALESCE(CAST(CASE WHEN c.lndsus >= (SELECT "LndSust" FROM lut.mh_thresholds) THEN SUM(a.contents) ELSE 0 END AS NUMERIC),0) AS "ContCostT_Lst",

d.geom AS "geom_poly",
d.geompoint AS "geom_point"

FROM exposure.canada_exposure a
LEFT JOIN lut.mh_intensity_canada_mhsum b ON a.sauid = b.sauidt
LEFT JOIN lut.mh_intensity_canada c on a.sauid = c.sauidt
LEFT JOIN boundaries."Geometry SAUID" d on a.sauid = d."SAUIDt"
LEFT JOIN lut.census_2016_canada e ON a.sauid = e.sauidt
GROUP BY a.sauid,b.mh_sum,c.lndsus,e.censuspop,e.people_du,d.geom,d.geompoint;