-- create schema for new scenario
CREATE SCHEMA IF NOT EXISTS results_mh;

-- create multi hazard indicators
DROP VIEW IF EXISTS results_mh.mh_intensity_natural_hazards_sauid CASCADE;
CREATE VIEW results_mh.mh_intensity_natural_hazards_sauid AS 

-- 3.0 Natural Hazards
-- 3.1 Multi-Hazard

-- 3.1.1 Multi-Hazard Potential
SELECT 
a.sauidt AS "Sauid",
CAST(CAST(ROUND(CAST(a.lon AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "lon",
CAST(CAST(ROUND(CAST(a.lat AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "lat",

-- 4.1 Seismic Hazard
-- 4.1.1 Ground Shaking Intensity
CAST(CAST(ROUND(CAST(a.pgv AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "PGV",
COALESCE(CAST(CAST(ROUND(CAST((a.pgv - (SELECT pgv_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT pgv_max FROM mh.mh_intensity_canada_minmax) - (SELECT pgv_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "PGVn",
CAST(CAST(ROUND(CAST(a.pga AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "PGA",
COALESCE(CAST(CAST(ROUND(CAST((a.pga - (SELECT pga_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT pga_max FROM mh.mh_intensity_canada_minmax) - (SELECT pga_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "PGAn",
CAST(CAST(ROUND(CAST(a.mmi6 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "MMI6",
COALESCE(CAST(CAST(ROUND(CAST((a.mmi6 - (SELECT mmi6_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT mmi6_max FROM mh.mh_intensity_canada_minmax) - (SELECT mmi6_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "MMI6n",
CAST(CAST(ROUND(CAST(a.mmi7 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "MMI7",
COALESCE(CAST(CAST(ROUND(CAST((a.mmi7 - (SELECT mmi7_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT mmi7_max FROM mh.mh_intensity_canada_minmax) - (SELECT mmi7_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "MMI7n",
CAST(CAST(ROUND(CAST(a.mmi8 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "MMI8",
COALESCE(CAST(CAST(ROUND(CAST((a.mmi8 - (SELECT mmi8_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT mmi8_max FROM mh.mh_intensity_canada_minmax) - (SELECT mmi8_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "MMI8n",

-- 5.1 Tsunami Hazard
-- 5.1.1 Tsunami Hazard Intensity
CAST(CAST(ROUND(CAST(a.tsun_ha AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Tsun",
COALESCE(CAST(CAST(ROUND(CAST((a.tsun_ha - (SELECT tsun_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT tsun_max FROM mh.mh_intensity_canada_minmax) - (SELECT tsun_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Tsun_n",

-- 6.1 Flood Hazard
-- 6.1.1 Flood Hazard Intensity
CAST(CAST(ROUND(CAST(a.fl200 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Fl200",
COALESCE(CAST(CAST(ROUND(CAST((a.fl200 - (SELECT fl200_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT fl200_max FROM mh.mh_intensity_canada_minmax) - (SELECT fl200_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Fl200_n",
CAST(CAST(ROUND(CAST(a.fl500 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Fl500",
COALESCE(CAST(CAST(ROUND(CAST((a.fl500 - (SELECT fl500_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT fl500_max FROM mh.mh_intensity_canada_minmax) - (SELECT fl500_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Fl500_n",
CAST(CAST(ROUND(CAST(a.fl1000 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Fl1000",
COALESCE(CAST(CAST(ROUND(CAST((a.fl1000 - (SELECT fl1000_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT fl1000_max FROM mh.mh_intensity_canada_minmax) - (SELECT fl1000_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Fl1000_n",

-- 7.1 Landslide Hazard
-- 6.1.1 Debris Flow Susceptibility
CAST(CAST(ROUND(CAST(a.lndsus AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "LndSus",
COALESCE(CAST(CAST(ROUND(CAST((a.lndsus - (SELECT lndsus_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT lndsus_max FROM mh.mh_intensity_canada_minmax) - (SELECT lndsus_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "LndSusn",

-- 8.1 Wildfire Hazard
-- 8.1.1 Wildfire Intensity
CAST(CAST(ROUND(CAST(a.fire AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Fire",
COALESCE(CAST(CAST(ROUND(CAST((a.fire - (SELECT fire_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT fire_max FROM mh.mh_intensity_canada_minmax) - (SELECT fire_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Firen",

-- 9.1 Cyclone Hazard
-- 9.1.1 Cyclone Wind Speed
CAST(CAST(ROUND(CAST(a.cy100 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Cy100",
COALESCE(CAST(CAST(ROUND(CAST((a.cy100 - (SELECT cy100_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT cy100_max FROM mh.mh_intensity_canada_minmax) - (SELECT cy100_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Cy100n",
CAST(CAST(ROUND(CAST(a.cy250 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Cy250",
COALESCE(CAST(CAST(ROUND(CAST((a.cy250 - (SELECT cy250_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT cy250_max FROM mh.mh_intensity_canada_minmax) - (SELECT cy250_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Cy250n",
CAST(CAST(ROUND(CAST(a.cy500 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Cy500",
COALESCE(CAST(CAST(ROUND(CAST((a.cy500 - (SELECT cy500_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT cy500_max FROM mh.mh_intensity_canada_minmax) - (SELECT cy500_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Cy500n",
CAST(CAST(ROUND(CAST(a.cy1000 AS NUMERIC),6) AS FLOAT) AS NUMERIC) AS "Cy1000",
COALESCE(CAST(CAST(ROUND(CAST((a.cy1000 - (SELECT cy1000_min FROM mh.mh_intensity_canada_minmax))/NULLIF((SELECT cy1000_max FROM mh.mh_intensity_canada_minmax) - (SELECT cy1000_min FROM mh.mh_intensity_canada_minmax),0) AS NUMERIC),6) AS FLOAT) AS NUMERIC),0) AS "Cy1000n",

b.geom AS "geom_poly",
b.geompoint AS "geom_point"

FROM mh.mh_intensity_canada a
LEFT JOIN boundaries."Geometry SAUID" b on a.sauidt = b."SAUIDt";