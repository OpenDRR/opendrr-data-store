-- create multi hazard indicators
DROP VIEW IF EXISTS results.mh_threat_flood_hazard_sauid CASCADE;
CREATE VIEW results.mh_threat_flood_hazard_sauid AS 

-- 6.1 Flood Hazard
-- 6.1.1 Flood Hazard Intensity
-- 6.1.1.1 Riverine Flood Depth
SELECT 
a.sauid,
COALESCE(CAST((b.mh_sum - (SELECT mhsum_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT mhsum_max FROM lut.mh_intensity_canada_minmax) - (SELECT mhsum_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "MH_Intensity",
CAST(c.fl200 AS NUMERIC) AS "Fl200",
COALESCE(CAST((c.fl200 - (SELECT fl200_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT fl200_max FROM lut.mh_intensity_canada_minmax) - (SELECT fl200_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "Fl200_n",
CAST(c.fl500 AS NUMERIC) AS "Fl500",
(SELECT "Fl500t" FROM lut.mh_thresholds) AS "Fl500t", -- 500yr Flood Hazard threshold
COALESCE(CAST((c.fl500 - (SELECT fl500_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT fl500_max FROM lut.mh_intensity_canada_minmax) - (SELECT fl500_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "Fl500_n",
CAST(c.fl1000 AS NUMERIC) AS "Fl1000",
COALESCE(CAST((c.fl1000 - (SELECT fl1000_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT fl1000_max FROM lut.mh_intensity_canada_minmax) - (SELECT fl1000_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "Fl1000_n",

-- 6.1.2.1 Building Function
COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.number) ELSE 0 END AS NUMERIC),0) AS "BldgNumT_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-LD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_LD_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-MD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_MD_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-HD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_HD_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Commercial' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Comm_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Industrial' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Ind_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Civic' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Civic_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Agricultural' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Agr_Flt",

-- 6.1.2.2 Building Construction
COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Wood' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Wood_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Concrete' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Concrete_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Precast' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "PreCast_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='RMasonry' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RMasonry_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='URMasonry' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "URMasonry_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Steel' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Steel_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Manufactured' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Manufactured_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='PC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "PreCode_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='LC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "LowCode_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='MC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "ModCode_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='HC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "HiCode_Flt",

-- 6.1.2.3 People
COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN e.censuspop ELSE 0 END AS NUMERIC),0) AS "CensusPop_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.day) ELSE 0 END AS NUMERIC),0) AS "DayPopT_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.night) ELSE 0 END AS NUMERIC),0) AS "NightPopT_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.transit) ELSE 0 END AS NUMERIC),0) AS "TransitPopT_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-LD' THEN a.number ELSE 0 END) / e.people_du ELSE 0 END AS NUMERIC),0) AS "SF_Hshlds_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN (SUM(CASE WHEN a.genocc ='Residential-MD' THEN a.number ELSE 0 END) + SUM(CASE WHEN a.genocc ='Residential-HD' THEN a.number ELSE 0 END)) / 
e.people_du ELSE 0 END AS NUMERIC),0) AS "MF_Hshlds_Flt",

-- 6.1.2.4 Assets
COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.structural + a.nonstructural + a.contents) ELSE 0 END AS NUMERIC),0) AS "AssetCostT_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.structural + a.nonstructural) ELSE 0 END AS NUMERIC),0) AS "BldgCostT_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.structural) ELSE 0 END AS NUMERIC),0) AS "StrCostT_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.nonstructural) ELSE 0 END AS NUMERIC),0) AS "NStrCostT_Flt",

COALESCE(CAST(CASE WHEN c.fl500 >= (SELECT "Fl500t" FROM lut.mh_thresholds) THEN SUM(a.contents) ELSE 0 END AS NUMERIC),0) AS "ContCostT_Flt",

d.geom AS "geom_poly",
d.geompoint AS "geom_point"

FROM exposure.canada_exposure a
LEFT JOIN lut.mh_intensity_canada_mhsum b ON a.sauid = b.sauidt
LEFT JOIN lut.mh_intensity_canada c on a.sauid = c.sauidt
LEFT JOIN boundaries."Geometry SAUID" d on a.sauid = d."SAUIDt"
LEFT JOIN lut.census_2016_canada e ON a.sauid = e.sauidt
GROUP BY a.sauid,b.mh_sum,c.fl200,c.fl500,c.fl1000,e.censuspop,e.people_du,d.geom,d.geompoint;