-- create multi hazard indicators
DROP VIEW IF EXISTS results.mh_threat_seismic_hazard_sauid CASCADE;
CREATE VIEW results.mh_threat_seismic_hazard_sauid AS 

-- 4.1 Seismic Hazard
-- 4.1.1 Seismic Hazard Intensity
-- 4.1.1.1 Ground Shaking
SELECT 
a.sauid,
COALESCE(CAST((b.mh_sum - (SELECT mhsum_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT mhsum_max FROM lut.mh_intensity_canada_minmax) - (SELECT mhsum_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "MHInt",
CAST(c.pgv AS NUMERIC) AS "PGV",
COALESCE(CAST((c.pgv - (SELECT pgv_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT pgv_max FROM lut.mh_intensity_canada_minmax) - (SELECT pgv_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "PGVn",
CAST(c.pga AS NUMERIC) AS "PGA",
COALESCE(CAST((c.pga - (SELECT pga_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT pga_max FROM lut.mh_intensity_canada_minmax) - (SELECT pga_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "PGAn",
(SELECT "PGAt" FROM lut.mh_thresholds) AS "PGAt", -- Peak Ground Acceleration threshold

-- 4.1.1.2 MMI Likelihood (50yr)
CAST(c.mmi6 AS NUMERIC) AS "MMI6",
COALESCE(CAST((c.mmi6 - (SELECT mmi6_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT mmi6_max FROM lut.mh_intensity_canada_minmax) - (SELECT mmi6_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "MMI6n",

CAST(c.mmi7 AS NUMERIC) AS "MMI7",
COALESCE(CAST((c.mmi7 - (SELECT mmi7_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT mmi7_max FROM lut.mh_intensity_canada_minmax) - (SELECT mmi7_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "MMI7n",
(SELECT "MMI7t" FROM lut.mh_thresholds) AS "MMI7t", -- 50yr MMI VII probability score

CAST(c.mmi8 AS NUMERIC) AS "MMI8",
COALESCE(CAST((c.mmi8 - (SELECT mmi8_min FROM lut.mh_intensity_canada_minmax))/NULLIF((SELECT mmi8_max FROM lut.mh_intensity_canada_minmax) - (SELECT mmi8_min FROM lut.mh_intensity_canada_minmax),0) AS NUMERIC),0) AS "MMI8n",

-- 4.1.2.1 Building Function
COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.number) ELSE 0 END AS NUMERIC),0) AS "BldgNumT_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-LD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_LD_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-MD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_MD_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-HD' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RES_HD_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Commercial' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Comm_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Industrial' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Ind_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Civic' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Civic_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Agricultural' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Agr_Eqt",

-- 4.1.2.2 Building Construction
COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Wood' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Wood_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Concrete' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Concrete_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Precast' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "PreCast_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='RMasonry' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "RMasonry_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='URMasonry' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "URMasonry_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Steel' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Steel_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.bldggen ='Manufactured' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "Manufactured_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='PC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "PreCode_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='LC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "LowCode_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='MC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "ModCode_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.eqdeslev ='HC' THEN a.number ELSE 0 END) ELSE 0 END AS NUMERIC),0) AS "HiCode_Eqt",

-- 4.1.2.3 People
COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN e.censuspop ELSE 0 END AS NUMERIC),0) AS "CensusPop_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.day) ELSE 0 END AS NUMERIC),0) AS "DayPopT_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.night) ELSE 0 END AS NUMERIC),0) AS "NightPopT_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.transit) ELSE 0 END AS NUMERIC),0) AS "TransitPopT_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(CASE WHEN a.genocc ='Residential-LD' THEN a.number ELSE 0 END) / e.people_du ELSE 0 END AS NUMERIC),0) AS "SF_Hshlds_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN (SUM(CASE WHEN a.genocc ='Residential-MD' THEN a.number ELSE 0 END) + SUM(CASE WHEN a.genocc ='Residential-HD' THEN a.number ELSE 0 END)) / 
e.people_du ELSE 0 END AS NUMERIC),0) AS "MF_Hshlds_Eqt",

-- 4.1.2.4 Assets
COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.structural + a.nonstructural + a.contents) ELSE 0 END AS NUMERIC),0) AS "AssetCostT_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.structural + a.nonstructural) ELSE 0 END AS NUMERIC),0) AS "BldgCostT_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.structural) ELSE 0 END AS NUMERIC),0) AS "StrCostT_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.nonstructural) ELSE 0 END AS NUMERIC),0) AS "NStrCostT_Eqt",

COALESCE(CAST(CASE WHEN c.pga >= (SELECT "PGAt" FROM lut.mh_thresholds) THEN SUM(a.contents) ELSE 0 END AS NUMERIC),0) AS "ContCostT_Eqt",

d.geom AS "geom_poly",
d.geompoint AS "geom_point"

FROM exposure.canada_exposure a
LEFT JOIN lut.mh_intensity_canada_mhsum b ON a.sauid = b.sauidt
LEFT JOIN lut.mh_intensity_canada c on a.sauid = c.sauidt
LEFT JOIN boundaries."Geometry SAUID" d on a.sauid = d."SAUIDt"
LEFT JOIN lut.census_2016_canada e ON a.sauid = e.sauidt
GROUP BY a.sauid,b.mh_sum,c.pgv,c.pga,C.mmi6,c.mmi7,c.mmi8,e.censuspop,e.people_du,d.geom,d.geompoint;